// <auto-generated />
using System;
using EDMSolution.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EDMSolution.Data.Migrations
{
    [DbContext(typeof(EDMDbContext))]
    [Migration("20220819175705_Inital")]
    partial class Inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EDMSolution.Data.Entities.AppConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("MaDonViSuDung")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Appconfigs");

                    b.HasData(
                        new
                        {
                            Key = "HomeTitle",
                            MaDonViSuDung = 1L,
                            Value = "This is home page of DPISolution"
                        },
                        new
                        {
                            Key = "HomeKeyword",
                            MaDonViSuDung = 1L,
                            Value = "This is keyword of DPISolution"
                        },
                        new
                        {
                            Key = "HomeDescription",
                            MaDonViSuDung = 1L,
                            Value = "This is description of DPISolution"
                        });
                });

            modelBuilder.Entity("EDMSolution.Data.Entities.AppFunction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("MaDonViSuDung")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppFunctions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Xem",
                            Status = 1
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Tạo",
                            Status = 1
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Sửa",
                            Status = 1
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Xóa",
                            Status = 1
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Thay dổi trạng thái",
                            Status = 1
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Gửi duyệt",
                            Status = 1
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Duyệt",
                            Status = 1
                        });
                });

            modelBuilder.Entity("EDMSolution.Data.Entities.AppModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Action")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Controller")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("IdParent")
                        .HasColumnType("bigint");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<long?>("MaDonViSuDung")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppModules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Action = "",
                            Controller = "",
                            Icon = "icon-chucnangchung",
                            IdParent = 0L,
                            Index = 0,
                            Name = "Chức năng chung",
                            Status = 1
                        },
                        new
                        {
                            Id = 2L,
                            Action = "Index",
                            Controller = "sysUser",
                            Icon = "icon-qltaikhoan",
                            IdParent = 1L,
                            Index = 3,
                            Name = "Quản lí tài khoản",
                            Status = 1
                        },
                        new
                        {
                            Id = 3L,
                            Action = "Index",
                            Controller = "sysRole",
                            Icon = "icon-qlvaitro",
                            IdParent = 1L,
                            Index = 5,
                            Name = "Quản lí vai trò",
                            Status = 1
                        });
                });

            modelBuilder.Entity("EDMSolution.Data.Entities.AppModuleFunction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("IdFunction")
                        .HasColumnType("bigint");

                    b.Property<long>("IdModule")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaDonViSuDung")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("AppModuleFunctions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IdFunction = 1L,
                            IdModule = 1L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 2L,
                            IdFunction = 2L,
                            IdModule = 1L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 3L,
                            IdFunction = 3L,
                            IdModule = 1L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 4L,
                            IdFunction = 4L,
                            IdModule = 1L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 5L,
                            IdFunction = 5L,
                            IdModule = 1L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 6L,
                            IdFunction = 1L,
                            IdModule = 2L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 7L,
                            IdFunction = 2L,
                            IdModule = 2L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 8L,
                            IdFunction = 3L,
                            IdModule = 2L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 9L,
                            IdFunction = 4L,
                            IdModule = 2L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 10L,
                            IdFunction = 5L,
                            IdModule = 2L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 11L,
                            IdFunction = 1L,
                            IdModule = 3L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 12L,
                            IdFunction = 2L,
                            IdModule = 3L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 13L,
                            IdFunction = 3L,
                            IdModule = 3L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 14L,
                            IdFunction = 4L,
                            IdModule = 3L,
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 15L,
                            IdFunction = 5L,
                            IdModule = 3L,
                            MaDonViSuDung = 1L
                        });
                });

            modelBuilder.Entity("EDMSolution.Data.Entities.AppPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("IdModuleFunction")
                        .HasColumnType("bigint");

                    b.Property<string>("IdRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaDonViSuDung")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("AppPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IdModuleFunction = 1L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 2L,
                            IdModuleFunction = 2L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 3L,
                            IdModuleFunction = 3L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 4L,
                            IdModuleFunction = 4L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 5L,
                            IdModuleFunction = 5L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 6L,
                            IdModuleFunction = 6L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 7L,
                            IdModuleFunction = 7L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 8L,
                            IdModuleFunction = 8L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 9L,
                            IdModuleFunction = 9L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 10L,
                            IdModuleFunction = 10L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 11L,
                            IdModuleFunction = 11L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 12L,
                            IdModuleFunction = 12L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 13L,
                            IdModuleFunction = 13L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 14L,
                            IdModuleFunction = 14L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        },
                        new
                        {
                            Id = 15L,
                            IdModuleFunction = 15L,
                            IdRole = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            MaDonViSuDung = 1L
                        });
                });

            modelBuilder.Entity("EDMSolution.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<long?>("MaDonViSuDung")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserCreate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ConcurrencyStamp = "4b6402a2-1867-4625-8f82-5f3c022c865e",
                            DateCreate = new DateTime(2022, 8, 20, 0, 57, 5, 238, DateTimeKind.Local).AddTicks(4296),
                            Description = "Administrator role",
                            IsDelete = 0,
                            MaDonViSuDung = 1L,
                            Name = "admin",
                            NormalizedName = "admin",
                            RoleType = 1,
                            Status = 1
                        });
                });

            modelBuilder.Entity("EDMSolution.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("MaDonViSuDung")
                        .HasColumnType("bigint");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserCreate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "26c24cc4-183f-4b5a-8342-c46793d2f5d1",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tedu.international@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Dang Dinh Lam",
                            IsDelete = 0,
                            LockoutEnabled = false,
                            MaDonViSuDung = 1L,
                            NormalizedEmail = "tedu.international@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ9bMmWh+ZUv3JEnWuUBTNt2hGUKwyK/avoQga8mEt+nAnWlIKgH84ouYw+zs0bBug==",
                            PhoneNumberConfirmed = false,
                            RoleId = "8d04dce2-969a-435d-bba4-df3f325983dc",
                            SecurityStamp = "",
                            Status = 1,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("EDMSolution.Data.Entities.DonViSuDung_Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("DonViSuDungId")
                        .HasColumnType("bigint");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("DonViSuDung_Modules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DonViSuDungId = 1L,
                            ModuleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            DonViSuDungId = 1L,
                            ModuleId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            DonViSuDungId = 1L,
                            ModuleId = 3L
                        });
                });

            modelBuilder.Entity("EDMSolution.Data.Entities.Language", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<long?>("MaDonViSuDung")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = "vi",
                            IsDefault = true,
                            MaDonViSuDung = 1L,
                            Name = "Tiếng Việt"
                        },
                        new
                        {
                            Id = "en",
                            IsDefault = false,
                            MaDonViSuDung = 1L,
                            Name = "English"
                        });
                });

            modelBuilder.Entity("EDMSolution.Data.Entities.Tb_DonViSuDung", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Banner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Favicon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenDonViSuDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMienCon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMienRieng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tb_DonViSuDungs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DiaChi = "test",
                            Email = "test@gmail.com.vn",
                            IsDelete = 0,
                            SoDienThoai = "0987654321",
                            Status = 1,
                            TenDonViSuDung = "Sở kế hoạch và đầu tư",
                            TenMienCon = "https://localhost:5002",
                            TenMienRieng = "https://localhost:5002"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
